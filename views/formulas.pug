extends layout

block link
  -var selected = 'Formulas';

block content
  div.card-tabs
    ul.nav.nav-tabs
      li.active
        a(data-toggle='tab', href='#formula-table') Formulas
      li.adminOnly.hide
        a(data-toggle='tab', href='#add_formula') Create
      li
        a(data-toggle='tab', href='#completed-productions') Completed Productions

    .tab-content
      #formula-table.tab-pane.fade.in.active
        div.card
          div.card-header(data-background-color='purple')
            h4.title Formulas
          div.card-content.table-response
            table.table#formulaTable
              thead.text-primary
                th(onclick='sortTable(0, \'formula\')') Formula
                th(onclick='sortTable(1, \'formula\')') Description
                th(onclick='sortTable(2, \'formula\')') Ingredients (Quantity in Native Units)
                th(onclick='sortTable(3, \'formula\')') Number of Product Units Produced
              tbody
              each formula in formulas
                tr
                  td
                    a(href='/formulas/' + formula.name)= formula.name
                  td= formula.description
                  td
                    each tuple in formula.tuples
                      a(href='/ingredients/' + encodeURIComponent(tuple.ingredient))= tuple.ingredient
                      |  (#{tuple.quantity})
                      br
                  td= formula.units
            .row
              .col-md-12
                p
                  br
            div.pages(style="text-align:center;")
              .col-md-12
                form(action="/formulas/home/" + (parseInt(page)-1).toString(), method="get" style="display: inline-block;")
                  button.btn.btn-white(type="submit" style="padding: 5px;") <
                p(style="padding: 10px; display: inline-block;") Page #{parseInt(page)}
                if maxPage
                  form(action="/formulas/home/" + (parseInt(page)).toString(), method="get" style="display: inline-block;")
                    button.btn.btn-white(type="button" style="padding: 5px;") >
                else
                  form(action="/formulas/home/" + (parseInt(page)+1).toString(), method="get" style="display: inline-block;")
                    button.btn.btn-white(type="submit" style="padding: 5px;") >
      .card-content.tab-pane.fade#add_formula.adminOnly.hide
        h1= 'Create Formula'
        form(action='/formulas/new', method='post')
          .form-group
            label.control-label Formula Name
            input.form-control(type='text', name='name', required='')
          .form-group
            label.control-label Description
            textarea.form-control(name='description' rows='5' cols='100' style='border:1px solid #cccccc; padding:5px;')
          .form-group
            label.control-label Type of Product
            select.form-control#type-selector(name='type', placeholder = '', required='', onclick='showIngredientInfo()')
              option(disabled = '', selected='', value='') Select an Option
              option(value='final') Final
              option(value='intermediate') Intermediate
          .div(style='display: none;')#ingredient-info
            .form-group
              label.control-label Package Type
              select.form-control.ing-attr(name='package', placeholder = '', required='')
                option(disabled='' selected='' value='') Select an option
                each package in ['sack', 'pail', 'drum', 'supersack', 'truckload', 'railcar']
                  option(value=package)= package
            .form-group
              label.control-label Storage Temperature
              select.form-control.ing-attr(name='temperature', placeholder = '', required='')
                option(disabled='' selected='' value='') Select an option
                each temp in ['frozen', 'refrigerated', 'room temperature']
                  option(value=temp)= temp
            .form-group
              label.control-label Native Unit
              input.form-control.ing-attr(type='text', name='nativeUnit', placeholder = '', required='')
            .form-group
              label.control-label Native Units per Package
              input.form-control.ing-attr(type='number', step='any', name='unitsPerPackage', required='')
          div.tupleRow#data2(data-ingredients=ingredients)
            .row
              .col-md-11
                .row#tuple1
                  .col-md-6
                    .form-group
                    label.control-label Ingredient
                    select#ingredient1.form-control(name='ingredient1', required='')
                      option(disabled="" selected="" value="") Select an Ingredient
                      each ingredient in ingredients
                        option(value=ingredient._id)= ingredient['name']
                  .col-md-4
                    .form-group
                    label.control-label Quantity (Number of Native Units)
                    input#quantity1.form-control(type='number', name='quantity1', min='0', step='any', required='')
                  .col-md-2
                    p
                      br
                      br
                      br
                      br
                    button.btn.btn-round.btn-just-icon.remove(type='button', value='remove', onclick='deleteTuple(1)', style='background-color:red;')
                      i.material-icons delete
              .col-md-1
                p
                  br
                button#btn1.btn.btn-round.btn-just-icon.add-more(type='button', value='add')
                  i.material-icons add
          .form-group
            label.control-label Number of Product Units Produced
            input.form-control(type='number', name='units', min='0', required='')
          button.btn.btn-primary.pull-right(type='submit', value='add vendor') Add Formula
      .card-content.tab-pane.fade#completed-productions
        div.card-header(data-background-color='purple')
          h4.title Completed Productions
        div.card-content.table-response
          table.table#formulaTable
            thead.text-primary
              th(onclick='sortTable(0, \'formula\')') Product (Lot Number)
              th(onclick='sortTable(1, \'formula\')') Ingredients (Vendor, Lot Number)
              th(onclick='sortTable(1, \'formula\')') Status
              th(onclick='sortTable(2, \'formula\')') Timestamp
            tbody
            each record in report
              tr
                td
                  a(href='/formulas/' + record.name)= record.name
                  |  (#{record.lotNumber})
                td
                  each tuple in record.constituents
                    a(href='/ingredients/' + encodeURIComponent(tuple.ingredientName))= tuple.ingredientName
                    |  (#{tuple.vendorName}, #{tuple.lotNumber})
                    br
                if record.inProgress
                  td 
                    div
                      p In Progress
                      form(action='/production_lines/mark_completed/' + record.productionLine, method='post')
                        button.btn.btn-primary(type='submit', style='margin:0px; padding: 5px 10px;') Complete Production
                else
                  td Completed
                td= record.timestamp
  div#index2(data-start=1)

block scripts
  script.
    var ingredients = document.getElementById('data2').dataset.ingredients;
    ingredients = JSON.parse(ingredients);
    createTuples(ingredients, 1);
