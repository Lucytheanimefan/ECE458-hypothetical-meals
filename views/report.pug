extends layout
block link
  -var selected = 'Report';

block content
  div#tabs
    ul.nav.nav-tabs
      li.active
        a(data-toggle='tab', href='#spending-table') Spending
      li
        a(data-toggle='tab', href='#production-table') Production
      li
        a(data-toggle='tab', href='#production-efficiency') Production Efficiency
      li
        a(data-toggle='tab', href='#formula-table') Formula Production
      li
        a(data-toggle='tab', href='#recall-table') Recall
      li
        a(data-toggle='tab', href='#profit-table') Profitability
      li
        a(data-toggle='tab', href='#ingredient-table') Ingredient Freshness
      li
        a(data-toggle='tab', href='#product-table') Final Product Freshness
  .tab-content
    #spending-table.tab-pane.fade.in.active
      div.card
        div.card-header(data-background-color='purple')
          h4.title Spending Report
        div.card-content.table-response
          input.form-control#spendingInput(type='text',onkeyup='filterTable(\'spending\')', placeholder='Search for ingredients..', title='Type in some search text')
          table.table#spendingTable
            thead.text-primary
              th(onclick='sortTable(0, \'spending\')') Ingredient
              th(onclick='sortTable(1, \'spending\')') Total Spending
            tbody
            if spending
              each tuple in spending
                tr
                  td
                    a(href='/ingredients/' + encodeURIComponent(tuple.ingredient))= tuple.ingredient
                  td= tuple.totalSpent.toFixed(2)
            else
    #production-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Spending Report: Production
        div.card-content.table-response
          input.form-control#productionInput(type='text',onkeyup='filterTable(\'production\')', placeholder='Search for ingredients..', title='Type in some search text')
          table.table#productionTable
            thead.text-primary
              th(onclick='sortTable(0, \'production\')') Ingredient
              th(onclick='sortTable(1, \'production\')') Total Spending
            tbody
            if production
              each tuple in production
                tr
                  td
                    a(href='/ingredients/' + encodeURIComponent(tuple.ingredient))= tuple.ingredient
                  td= tuple.totalSpent.toFixed(2)
            else
    #production-efficiency.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Production Efficiency Report
        div.card-content.table-response
          form(action='/reports/production_line_efficiency', method='post')
            .form-group
              label.control-label Start date
              input.form-control(type='date' name='start' value=startDate)
            .form-group
              label.control-label End date
              input.form-control(type='date' name='end' value=endDate)
            button.btn.btn-primary.pull-left(type='submit', value='productionefficiency') Get Production Efficiency

    #formula-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Production Report by Formula
        div.card-content.table-response
          input.form-control#productionInput(type='text',onkeyup='filterTable(\'formula\')', placeholder='Search for ingredients..', title='Type in some search text')
          table.table#formulaTable
            thead.text-primary
              th(onclick='sortTable(0, \'formula\')') Formula
              th(onclick='sortTable(1, \'formula\')') Total Units Produced
              th(onclick='sortTable(2, \'formula\')') Total Ingredient Cost
            tbody
            if formula
              each tuple in formula
                tr
                  td
                    a(href='/formulas/' + encodeURIComponent(tuple.formula))= tuple.formula
                  td= tuple.unitsProduced
                  td= tuple.totalCost.toFixed(2)
            else
    #recall-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Recall Report
        div.card-content.table-response
          form(action='/reports/recall', method='post')
            label.control-label Select Lot
            select.form-control(name='ingLot', placeholder = '', required='')
              option(disabled='' selected='' value='') Select an option
              each lot in recall
                option(value=JSON.stringify(lot))= lot.ing + ' ordered from ' + lot.vendor + ', lot ' + lot.lot
            button.btn.btn-primary.pull-left(type='submit', value='recall report') Get Recall Report
    #profit-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Profitability Report
        div.card-content.table-response
          table.table#profitTable
            thead.text-primary
              th(onclick='sortTable(0, \'profit\')') Product
              th(onclick='sortTable(1, \'profit\')') Units Sold
              th(onclick='sortTable(2, \'profit\')') Per Unit Price ($)
              th(onclick='sortTable(3, \'profit\')') Revenue ($)
              th(onclick='sortTable(4, \'profit\')') Ingredient Cost ($)
              th(onclick='sortTable(5, \'profit\')') Profit ($)
              th(onclick='sortTable(6, \'profit\')') Per Unit Profit ($)
              th(onclick='sortTable(7, \'profit\')') Profit Margin (%)
            tbody
            each product in profit
              tr
                td= product.productName
                td= product.unitsSold
                td= +product.unitCost.toFixed(2)
                td= +product.revenue.toFixed(2)
                td= +product.ingCost.toFixed(2)
                td= +product.profit.toFixed(2)
                td= +product.perUnitProfit.toFixed(2)
                td= +product.profitMarginPercent.toFixed(2)
            tbody
              td= 'Overall Profit'
              td
              td
              td= +overallProfit.revenue.toFixed(2)
              td= +overallProfit.cost.toFixed(2)
              td= +overallProfit.profit.toFixed(2)
              td
              td
    #ingredient-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Ingredient Freshness Report
        div.card-content.table-response
          input.form-control#ingredientInput(type='text',onkeyup='filterTable(\'ingredient\')', placeholder='Search for ingredients..', title='Type in some search text')
          table.table#ingredientTable
            thead.text-primary
              th(onclick='sortTable(0, \'ingredient\')') Ingredient
              th(onclick='sortTable(1, \'ingredient\')') Average Time in Inventory
              th(onclick='sortTable(2, \'ingredient\')') Worst Case Time in Inventory
            tbody
            if ingredient
              each tuple in ingredient
                tr
                  td
                    a(href='/ingredients/' + encodeURIComponent(tuple.ingredients))= tuple.ingredients
                  td= tuple.avgTime
                  td= tuple.worstTime
            else
            tbody
              td= 'Overall'
              td= freshness.avgTime
              td= freshness.worstTime
    #product-table.card-content.tab-pane.fade
      div.card
        div.card-header(data-background-color='purple')
          h4.title Final Product Freshness Report
        div.card-content.table-response
          input.form-control#productInput(type='text',onkeyup='filterTable(\'product\')', placeholder='Search for final products...', title='Type in some search text')
          table.table#productTable
            thead.text-primary
              th(onclick='sortTable(0, \'product\')') Final Product
              th(onclick='sortTable(1, \'product\')') Average Time in Distribution Network
              th(onclick='sortTable(2, \'product\')') Worst Case Time in Distribution Network
            tbody
            if finalProduct
              each tuple in finalProduct
                tr
                  td= tuple.products
                  td= tuple.avgTime
                  td= tuple.worstTime
            else
            tbody
              td= 'Overall'
              td= productFreshness.avgTime
              td= productFreshness.worstTime
